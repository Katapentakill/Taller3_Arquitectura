services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices_net

  auth-db:
    image: postgres:15
    container_name: auth-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: authT2_db
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - microservices_net

  usuarios-db:
    image: mariadb:10.7
    container_name: usuarios-db
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: superseguro123
    volumes:
      - usuarios-db-data:/var/lib/mysql
      - ./mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - microservices_net

  facturas-db:
    image: mariadb:10.7
    container_name: facturas-db
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: superseguro123
    volumes:
      - facturas-db-data:/var/lib/mysql
      - ./mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - microservices_net

  listas-db:
    image: postgres:15
    container_name: listas-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: listas_db
    volumes:
      - listas-db-data:/var/lib/postgresql/data
    networks:
      - microservices_net

  monitoreo-db:
    image: mongo:8
    container_name: monitoreo-db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - monitoreo-db-data:/data/db
    networks:
      - microservices_net

  videos-db:
    image: mongo:8         
    container_name: videos-db
    restart: always
    ports:
      - "27018:27017"       
    volumes:
      - videos-db-data:/data/db
    networks:
      - microservices_net

  interacciones-db:
    image: mongo:8
    container_name: interacciones-db
    restart: always
    ports:
      - "27019:27017"
    volumes:
      - interacciones-db-data:/data/db
    networks:
      - microservices_net
  auth:
    build: ./microservicios/auth
    container_name: auth
    ports:
      - "3002:3002"
    depends_on:
      rabbitmq:
        condition: service_healthy
      auth-db:
        condition: service_started
    volumes:
      - ./proto:/proto
    environment:
      DB_AUTH_HOST: auth-db
      DB_AUTH_PORT: 5432
      DB_AUTH_USERNAME: postgres
      DB_AUTH_PASSWORD: 123
      DB_AUTH_NAME: authT2_db
      JWT_SECRET: supersecreto123
      JWT_EXPIRES_IN: 1h
    networks:
      - microservices_net

  usuarios:
    build: ./microservicios/usuarios
    container_name: usuarios
    ports:
      - "50051:50051"
    depends_on:
      rabbitmq:
        condition: service_healthy
      usuarios-db:
        condition: service_started
    volumes:
      - ./proto:/proto
    environment:
      DB_USERS_HOST: usuarios-db
      DB_USERS_PORT: 3306
      DB_USERS_USERNAME: devuser
      DB_USERS_PASSWORD: superseguro123
      DB_USERS_NAME: usuariosT2_db
    networks:
      - microservices_net

  listas:
    build: ./microservicios/listas-reproduccion
    container_name: listas
    ports:
      - "50054:50054"
    depends_on:
      rabbitmq:
        condition: service_healthy
      listas-db:
        condition: service_started
    volumes:
      - ./proto:/proto
    environment:
      DB_LISTAS_HOST: listas-db
      DB_LISTAS_PORT: 5432
      DB_LISTAS_USERNAME: postgres
      DB_LISTAS_PASSWORD: 123
      DB_LISTAS_NAME: listas_db
    networks:
      - microservices_net

  monitoreo:
    build: ./microservicios/monitoreo
    container_name: monitoreo
    ports:
      - "50058:50058"
    depends_on:
      rabbitmq:
        condition: service_healthy
      monitoreo-db:
        condition: service_started
    volumes:
      - ./proto:/proto
    environment:
      MONGO_URI: mongodb://monitoreo-db:27017/micro_monitoreo
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    networks:
      - microservices_net

  videos:
      build: ./microservicios/videos
      container_name: videos
      ports:
        - "50059:50059"       
      depends_on:
        rabbitmq:
          condition: service_healthy
        videos-db:
          condition: service_started
      volumes:
        - ./proto:/proto     
      environment:
        MONGODB_URI: mongodb://videos-db:27017/micro_videos
        RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      networks:
        - microservices_net

  interacciones:
    build: ./microservicios/interacciones-sociales
    container_name: interacciones
    ports:
      - "50052:50052"
    depends_on:
      rabbitmq:
        condition: service_healthy
      interacciones-db:
        condition: service_started
    volumes:
      - ./proto:/proto
    environment:
      MONGO_INTERACCIONES_URI: mongodb://interacciones-db:27017/micro_interacciones
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    networks:
      - microservices_net

  facturas:
    build: ./microservicios/facturas
    container_name: facturas
    ports:
      - "50056:50056"
    depends_on:
      rabbitmq:
        condition: service_healthy
      facturas-db:
        condition: service_started
    volumes:
      - ./proto:/proto
    environment:
      DB_USERS_HOST: facturas-db
      DB_USERS_PORT: 3306
      DB_USERS_USERNAME: devuser
      DB_USERS_PASSWORD: superseguro123
      DB_FACTURAS_NAME: facturasT2_db
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    networks:
      - microservices_net

  correo:
    build: ./microservicios/correo
    container_name: correo
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      MAIL_USER: tu_correo@gmail.com
      MAIL_PASS: tu_contrase√±a_de_aplicacion
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    volumes:
      - ./proto:/proto
    networks:
      - microservices_net

  apigateway1:
    build: ./api-gateway
    container_name: apigateway1
    environment:
      - PORT=3005
    ports:
      - "3005:3005"
    volumes:
      - ./proto:/proto
    depends_on:
      - auth
      - usuarios
      - videos
      - listas
      - monitoreo
      - interacciones
      - facturas
    networks:
      - microservices_net

  apigateway2:
    build: ./api-gateway
    container_name: apigateway2
    environment:
      - PORT=3006
    ports:
      - "3006:3006"
    volumes:
      - ./proto:/proto
    depends_on:
      - auth
      - usuarios
      - videos
      - listas
      - monitoreo
      - interacciones
      - facturas
    networks:
      - microservices_net

  apigateway3:
    build: ./api-gateway
    container_name: apigateway3
    environment:
      - PORT=3007
    ports:
      - "3007:3007"
    volumes:
      - ./proto:/proto
    depends_on:
      - auth
      - usuarios
      - videos
      - listas
      - monitoreo
      - interacciones
      - facturas
    networks:
      - microservices_net

  nginx:
    image: nginx:latest
    container_name: nginx-taller2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - apigateway1
      - apigateway2
      - apigateway3
    networks:
      - microservices_net

networks:
  microservices_net:
    driver: bridge

volumes:
  auth-db-data:
  usuarios-db-data:
  facturas-db-data:
  listas-db-data:
  monitoreo-db-data:
  videos-db-data:
  interacciones-db-data:
  rabbitmq-data: